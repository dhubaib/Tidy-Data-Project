stop_for_status(req)
content(req)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
req[[1]]
req[[2]]
req[[3]]
str(req)
str(req)
req
stop_for_status(req)
content(req)
cont <- content(req)
cont[[1]]
cont$created_at
cont[[1$created_at
cont[[1]]$created_at
cont[[]]$created_at
cont$name
cont
sapply(%in% "datasharing", cont)
%in%
"hello" %in% "hello"
cont[,1]$created_at
cont[1,1]$created_at
str(cont)
summary(cont)
cont[,7]
cont[7,]
length(cont)
for (i in 1:length(cont)){
if(cont[[i]]$name == "datasharing"){print(cont[[i]]$created_at)}
}
getwd()
setwd("")
ls()
dir()
housing = read.csv("housing.csv")
install.packages("dplyr")
library(dplry)
library(dplyr)
select(housing, acr)
select(housing, ACR)
?filter
x = filter(housing, ACR == 3)
x[1:3]
x[,1:3]
str(X)
str(x)
x = filter(housing, ACR == 3)
x[1:3,]
x = filter(housing, ACR == 3, AGS == 6)
x = filter(housing, ACR == 3 && AGS == 6)
x = filter(housing, ACR == 3, AGS == 6)
x[1:3, agricultureLocal]
x[1:3, "agricultureLocal"]
x$agricultureLocal
x
colnames(x)
x = filter(housing, ACR == 3, AGS == 6)
agrLog = housing$ACR == 3 && housing$AGS ==6
agrTru = which(agrLog);
agrLog = housing$ACR == 3 & housing$AGS ==6
agrTru = which(agrLog);
agrTru[1:3]
install.packages("jpeg")
read.jpeg
jpeg.read
read.csv
read.jpg
load.jpg
readJPEG
lib(jpeg)
library(jpeg)
read.jpg
readJPEG
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = FALSE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg",native = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
readJPEG("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.jpg")
readJPEG("test.jpg", native=TRUE)
jeff = readJPEG("test.jpg", native=TRUE)
jeff
jeff[1]
quantiles(jeff)
quantiles
summary
summary(jeff)
quartiles(jeff)
quantile(jeff)
quantile(jeff,30)
quantile(jeff,0.3)
quantile(jeff,[0.3 0.8])
quantile(jeff,[0.3,0.8])
quantile(jeff,c(0.3,0.8)
quantile(jeff,c(0.3,0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.jpg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg","test.jpg")
jeff = readJPEG("test.jpg", native=TRUE)
quantile(jeff,c(0.3,0.8))
gdp = read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
education = read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
colnames(gdp)
gdp
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv","gdp.csv")
gdp = read.csv("gdp.csv")
gdp
colnames(education)
education$Short.Name
colnames(education)
gdp = read.csv("gdp.csv")
colnames(gdp)
gdp$short.name
?melt
meld
?merge
merge(gdp, education, by.x = x.short.name, by.y = y.Short.Name )
gdp <- rename(short.name = Short.Name)
?rename
gdp <- rename(gdp, short.name = Short.Name)
gdp <- rename(.gdp short.name = Short.Name)
gdp <- rename(.gdp, short.name = Short.Name)
gdp <- rename(gdp, short.name = Short.Name)
gdp <- rename(gdp, short.name = Short.Name)
rename(gdp, short.name = Short.Name)
rename(gdp, short.name)
rename(gdp, short.name = Short.Name)
rename(gdp, Short.Name = short.name)
colnames(gdp)
gdp<-rename(gdp, Short.Name = short.name)
colnames(gdp)
merge(gdp, education)
merged = merge(gdp, education)
colnames(merged)
merged = merge(gdp, education, all = true)
?merge
merged = merge(gdp, education, all = TRUE)
?arrange
colnames(gdp)
arrange(merged, Ranking)
arranged = arrange(merged, Ranking);
arranged = arrange(merged, desc(Ranking));
arranged
arranged[, Ranking]
arranged[,"Ranking"]
gdp = read.csv("gdp.csv")
merged = merge(education,csv)
merged = merge(education,gdp)
merged$ranking
merged$Ranking
merged$Short.Name
gdp = read.csv("gdp.csv")
gdp
colnames(education)
merged = merge(education,gdp)
merged
arranged = arrange(merged, desc(ranking))
arranged = arrange(merged, desc(Ranking))
arranged
merged[13,]
arranged = arrange(merged, (Ranking))
merged[13,]
arranged
cbind(arranged$Short.Name, arranged$Table.Name)
[arranged$Short.Name, arranged$Table.Name]
(arranged$Short.Name, arranged$Table.Name)
arranged$Short.Name
arranged[13,]
arranged
arranged$Short.Name == arranged$Table.Name
is.na(arranged$Short.Name) | is.na(arranged$Table.Name)
colnames(education)
merged = merge(education,gdp, all = TRUE)
merged = merge(education,gdp)
colnames(gdp)
education$Region
quantile
quantile(merged$gdp)
colnames(merged)
quantile(merged$gdp)
merged$gdp
merged$gdp<-as.numeric(merged$gdp)
quantile(merged$gdp)
merged$gdp
gdp$gdp
as.numeric(gdp$gdp)
(gdp$gdp)
?gsub
gsub(",","","1,200")
gdp$gdp
as.numeric(gsub(",","",gdp$gdp))
gdp<-as.numeric(gsub(",","",gdp$gdp))
gdp = read.csv("gdp.csv")
gdp$gdp<-as.numeric(gsub(",","",gdp$gdp))
merged = merge(education,gdp)
rownames(gdp)
rmnames = is.na(gdp$shortnames)
rmnames = is.na(gdp$Short.Names)
rmnames = is.na(gdp$Short.Name)
gdp[-rmnames,]
gdp[rmnames,]
rmnames
rmnames
gdp$Short.Name
gdp$Short.Name == ""
rmName = gdp$Short.Name == ""
gdp[-rmnames,]
gdp[rmNames,]
gdp[-rmname,]
gdp[-rmName,]
gdp[rmName,]
gdp[-rmName,]
gdp[!rmName,]
gdp = gdp[!rmName,]
gdp$gdp
merged = merge(gdp,education)
quantiles(merged$gdp)
quantile(merged$gdp)
quantile(merged$gdp,rm.na=TRUE)
?quantile
quantile(merged$gdp,na.rm=TRUE)
quantile(merged$gdp,c(0.2,0.4,0.6,0.8,1),na.rm=TRUE)
quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE)
?summarize
?mutate
mutate(gdp,quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE))
mutate(merged,quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE))
?ntile
ntile(quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE))
ntile(merged$gpd,quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE))
?ntile
ntile(merged$gdp)
ntile(quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE))
ntile(quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE), merged$gdp)
merged$gdp
groups = quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE)
ingroup = merged$gdp <= groups
ingroup = which(merged$gdp <= groups)
?aggregate
merged$Income.Group
merged[merged$Income.Group == "High income: OECD", "Ranking"]
mean(merged[merged$Income.Group == "High income: OECD", "Ranking"])
mean(merged[merged$Income.Group == "High income: OECD" & merged$Income.Group == "High income: nonOECD", "Ranking"])
merged[merged$Income.Group == "High income: OECD" & merged$Income.Group == "High income: nonOECD", "Ranking"]
mean(merged[merged$Income.Group == "High income: OECD", "Ranking"])
mean(merged[merged$Income.Group == "High income: nonOECD", "Ranking"])
(merged[merged$Income.Group == "High income: nonOECD", "Ranking"])
merged[merged$Income.Group == "High income: OECD" & merged$Income.Group == "High income: nonOECD", "Ranking"]
merged[merged$Income.Group == "High income: OECD", "Ranking"]
merged[merged$Income.Group == "High income: OECD" | merged$Income.Group == "High income: nonOECD" , "Ranking"]
mean(merged[merged$Income.Group == "High income: OECD" | merged$Income.Group == "High income: nonOECD" , "Ranking"], na.rm = TRUE)
mean(merged[merged$Income.Group == "High income: OECD" & merged$Income.Group == "High income: nonOECD" , "Ranking"], na.rm = TRUE)
mean(merged[merged$Income.Group == "High income: OECD" | merged$Income.Group == "High income: nonOECD" , "Ranking"], na.rm = TRUE)
colnames(education)
mean(merged[merged$Income.Group == "High income: OECD", "Ranking"], na.rm = TRUE)
mean(merged[merged$Income.Group == "High income: nonOECD" , "Ranking"], na.rm = TRUE)
mean(merged[merged$Income.Group == "High income: nonOECD" , "Ranking"], na.rm = TRUE)
mean(merged[merged$Income.Group == "High income: OECD" | merged$Income.Group == "High income: nonOECD" , "Ranking"], na.rm = TRUE)
merged[merged$Income.Group == "High income: OECD", "Ranking"]
mean(merged[merged$Income.Group == "High income: OECD", "Ranking"])
mean(merged[merged$Income.Group == "High income: nonOECD", "Ranking"],na.rm = TRUE)
groups = quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE)
quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE)
groups = quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE)
for (i in 2:len(groups)){
ind = merged$gdp<=groups[i]
gdp[ind,"group"] = i-1
}
?len
length
for (i in 2:length(groups)){
ind = merged$gdp<=groups[i]
gdp[ind,"group"] = i-1
}
for (i in 2:length(groups)){
ind = merged$gdp<=groups[i]
merged[ind,"group"] = i-1
}
?group_by
group_by(merged,gdp)
group_by(merged,quantile(gdp)
)
group_by(merged,quantile(gdp,na.rm=TRUE))
group_by(merged,quantile(merged%gdp,na.rm=TRUE))
group_by(merged,quantile(merged$gdp,na.rm=TRUE))
summarize_by(merged,quantiles(gdp))
summarize(merged,quantiles(gdp))
summarize(merged,quantile(gdp))
summarize(merged,quantile(gdp),na.rm=TRUE)
summarize(merged,quantile(gdp,na.rm=TRUE)
)
summarize(merged,quantile(gdp,na.rm=TRUE))
summarize(merged,mean(gdp,na.rm=TRUE))
?cut
cut(merged$gdp, groups)
cut(merged$gdp, groups, ordered_result = TRUE)
merged$gdp
cut(merged$gdp, groups, labels = FALSE)
groups
classes = cut(merged$gdp, groups, labels = FALSE)
merged[,"classes"] = classess
cbind(merged,classes)
arranged = arrange(merged,Rank)
colnames(merged)
arranged = arrange(merged,Ranking)
arranged
arranged$classes
arranged$class
merged = cbind(merged,classes)
arranged = arrange(merged,Ranking)
arranged$classes
arranged[,c("Ranking","classes")]
groups
arranged$class == 3
arranged$class == 3 && arranged$Ranking <= 38
arranged$class == 3 & arranged$Ranking <= 38
sum(arranged$class == 3 & arranged$Ranking <= 38)
sum(arranged$class == 4 & arranged$Ranking <= 38)
sum(arranged$class == 4 & arranged$Ranking <= 38, na.rm = TRUE)
sum(arranged$class == 3 & arranged$Ranking <= 38, na.rm = TRUE)
sum(arranged$class == 4 & arranged$Ranking <= 38, na.rm = TRUE)
sum(arranged$class == 2 & arranged$Ranking <= 38, na.rm = TRUE)
sum(arranged$class == 5 & arranged$Ranking <= 38, na.rm = TRUE)
sum(arranged$class == 3 & arranged$Ranking <= 38, na.rm = TRUE)
sum(arranged$class == 4 & arranged$Ranking <= 38, na.rm = TRUE)
colnames(arranged)
?summaize
?summarize
summarize(arranged, list(Income.Group, classes))
summarize(arranged, by.list(Income.Group, classes))
summarize(arranged, Income.Group, classes)
arranged$Income.Group
arranged$Income.Group == "Lower middle income" && arranged$class == 4
arranged$Income.Group == "Lower middle income" & arranged$class == 4
arranged$Income.Group == "Lower middle income" & arranged$class == 2
sum(arranged$Income.Group == "Lower middle income" & arranged$class == 2, na.rm = TRUE)
arranged$Income.Group == "Lower middle income" & arranged$class == 1
sum(arranged$Income.Group == "Lower middle income" & arranged$class == 1, na.rm = TRUE)
sum(arranged$Income.Group == "Lower middle income" & arranged$class == 4, na.rm = TRUE)
sum(arranged$Income.Group == "Lower middle income" & arranged$class == 1 na.rm = TRUE)
sum(arranged$Income.Group == "Lower middle income" & arranged$class == 1, na.rm = TRUE)
sum(arranged$Income.Group == "Lower middle income" & arranged$class == 5, na.rm = TRUE)
sum(arranged$class == 5)
sum(arranged$class == 5, na.rm = TRUE)
sum(arranged$class == 1, na.rm = TRUE)
sum(arranged$class == 2, na.rm = TRUE)
sum(arranged$class == 3, na.rm = TRUE)
groups
sum(arranged$Income.Group == "Lower middle income" & arranged$class == 5, na.rm = TRUE)
merged = merge(gdp, education, all = TRUE)
merged
merged = merge(gdp, education)
merged = merge(gdp, education, all = TRUE)
groups = quantile(merged$gdp,c(0.2,0.4,0.6,0.8,1))
groups = quantile(merged$gdp,c(0.2,0.4,0.6,0.8,1),na.rm=TRUE)
groups
cut(merged$gdp, groups)
?cut
cut(merged$gdp, groups, labels = FALSE)
groups = quantile(merged$gdp,c(0,0.2,0.4,0.6,0.8,1),na.rm=TRUE)
cut(merged$gdp, groups, labels = FALSE)
classes = cut(merged$gdp, groups, labels = FALSE)
gdpRank = cut(merged$gdp, groups, labels = FALSE)
merged = cbind(merged, gdpRank)
sum(merged$Income.Group == "Lower middle income" & merged$gdpRank == 5, na.rm = TRUE)
sum(merged$Income.Group == "Lower middle income" & merged$gdpRank == 1, na.rm = TRUE)
sum(merged$Income.Group == "Lower middle income" & merged$gdpRank == 3, na.rm = TRUE)
sum(merged$Income.Group == "Lower middle income" & merged$gdpRank == 4, na.rm = TRUE)
sum(merged$Income.Group == "Lower middle income" & merged$gdpRank == 5, na.rm = TRUE)
sum(merged$gdpRank == 5)
sum(merged$gdpRank == 5, na.rm = TRUE)
merged = merge(gdp, education, all = TRUE)
merged$Table.Name
merged$Table.Name == merged$Short.Nae
merged$Table.Name == merged$Short.Name
is.na(merged$Short.Name)
is.na(merged$Table.Name)
sum(is.na(merged$Table.Name))
sum(!is.na(merged$Table.Name))
colnames(merged)
merged[merged$Income.Group == "High income: OECD", "Ranking"]
mean(merged[merged$Income.Group == "High income: OECD", "Ranking"], na.rm = TRUE)
mean(merged[merged$Income.Group == "High income: nonOECD", "Ranking"], na.rm = TRUE)
merged$Ranking == 13
merged[merged$Ranking == 13,"Short.Name"]
merged$Ranking
merged[merged$Ranking == 13,"Short.Name"]
arrange = arrange(merged, Ranking)
arranged
arranged = arrange(merged, Ranking)
arranged
arranged[13,]
install.packages("MatchIt")
library(MatchIt)
help.matchit(object)
help.matchin
help.matchit
help.matchit
help.matchit()
data(lalonde)
lalonde
colnames(lalonde)
?data
?match.data
?object
?matchit()
help.matchit("matchit")
?matchit()
matchit
matchit(treat)
matchit(lalonde ~ lalonde$treat)
matchit(treat ~ 0 + 1, lalonde)
matchit(treat ~ 0 + 1 + 3, lalonde)
matchit(treat ~ 0 + 1 + 2, lalonde)
matchit(treat ~ 0 + 2, lalonde)
matchit(treat ~ 0 + 1, lalonde)
colnames(lalonde)
matchit(treat ~ educ + black + hispan, data = lalonde, method = "exact")
lalonde$black
matchit(treat ~ educ + black, data = lalonde, method = "exact")
colnames(lalonde)
matchit(treat ~ educ + black + age, data = lalonde, method = "exact")
matchit(treat ~ educ + black + age + hispan, data = lalonde, method = "exact")
matchit(treat ~ educ + black + hispan, data = lalonde, method = "exact")
m
m.out
matchit(treat ~ 0 + 1, lalonde)
m.out <- matchit(treat ~ 0 + 1, lalonde)
summary(m.out)
plot(m.out)
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
getwd()
script.dir
dirname
dirname(sys.frame)
sys.frame(1)
sys.frame(1)$ofile
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
## Get activity lables
activity_labels <- scan("activity_labels.txt", what = "character")
activity_labels <- cnames[seq(2,length(cnames), by = 2)] # Get labels only....
read.table("UCI-HAR-Dataset/test/X_test", sep = "\n")
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
sys.frame(1)$ofile
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
setwd
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
setwd(datadir)
setwd("D:/")
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
getwd()
setwd()
datadir
setwd(datadir)
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/run_analysis.R')
datadir
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
getwd()
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
scan
?scan
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
tbl[1]
tbl[2]
tbl[3]
tbl[4]
tbl[1,1]
tbl[1,3]
length(tbl)
dim(tbl)
tbl<- scan("UCI-HAR-Dataset/test/X_test.txt", what = "numeric", sep = "\t")
tbl<- scan("UCI-HAR-Dataset/test/X_test.txt", what = "numeric", sep = " ")
tbl[1]
tbl[2]
tbl[3]
tbl[4]
tbl[5]
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
tbl
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
traceback()
source('D:/OneDrive/Documents/College/2015 - Fall/Coursera - Data Science/CleaningData/Tidy-Data-Project/run_analysis.R')
